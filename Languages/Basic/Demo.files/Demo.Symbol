/language=Basic
/keyword=And
/keyword=As
/keyword=Base
/keyword=Boolean
/keyword=Byte
/keyword=Call
/keyword=Case
/keyword=Currency
/keyword=Declare
/keyword=Dim
/keyword=Do
/keyword=Double
/keyword=Each
/keyword=Else
/keyword=ElseIf
/keyword=End
/keyword=Enum
/keyword=Erase
/keyword=Error
/keyword=Exit
/keyword=False
/keyword=For
/keyword=Function
/keyword=Get
/keyword=Global
/keyword=GoTo
/keyword=If
/keyword=Integer
/keyword=Is
/keyword=LBound
/keyword=Let
/keyword=Lib
/keyword=Like
/keyword=Long
/keyword=Loop
/keyword=LSet
/keyword=Mod
/keyword=Next
/keyword=Not
/keyword=Nothing
/keyword=Null
/keyword=On
/keyword=Or
/keyword=Property
/keyword=Public
/keyword=ReDim
/keyword=REMARK
/keyword=Resume
/keyword=Return
/keyword=RSet
/keyword=Select
/keyword=Set
/keyword=Single
/keyword=Static
/keyword=Step
/keyword=Stop
/keyword=String
/keyword=Sub
/keyword=Then
/keyword=To
/keyword=True
/keyword=Type
/keyword=UBound
/keyword=Until
/keyword=Wend
/keyword=While
/keyword=With
/keyword=xor
/operator=-
/operator=!
/operator=&
/operator=(
/operator=)
/operator=*
/operator=,
/operator=/
/operator=[
/operator=]
/operator=^
/operator=+
/operator=<
/operator=<=
/operator=<>
/operator==
/operator=>
/operator=>=
/function=abs
/function=Acos
/function=Acosh
/function=Asc
/function=AscW
/function=Asin
/function=Asinh
/function=Atan
/function=Atan2
/function=Atanh
/function=atn
/function=BigMul
/function=BitDecrement
/function=BitIncrement
/function=CBool
/function=Cbrt
/function=CByte
/function=CChar
/function=CDate
/function=CDbl
/function=CDec
/function=Ceiling
/function=Chr
/function=ChrW
/function=CInt
/function=Clamp
/function=CLng
/function=CObj
/function=CopySign
/function=cos
/function=Cosh
/function=CSByte
/function=CShort
/function=CSng
/function=CStr
/function=CType
/function=CUInt
/function=CULng
/function=CUShort
/function=DivRem
/function=exp
/function=Filter
/function=Floor
/function=Format
/function=FormatCurrency
/function=FormatDateTime
/function=FormatNumber
/function=FormatPercent
/function=FusedMultiplyAdd
/function=Hex
/function=ILogB
/function=InStr
/function=InStrRev
/function=int
/function=Join
/function=LCase
/function=Left
/function=Len
/function=log
/function=Log10
/function=Log2
/function=lower
/function=LSet
/function=LTrim
/function=Max
/function=MaxMagnitude
/function=Mid
/function=Min
/function=MinMagnitude
/function=Oct
/function=Pow
/function=Replace
/function=Right
/function=rnd
/function=Round
/function=RSet
/function=RTrim
/function=ScaleB
/function=Sign
/function=sin
/function=Sinh
/function=Space
/function=Split
/function=sqr
/function=Sqrt
/function=Str
/function=StrComp
/function=StrConv
/function=StrDup
/function=StrReverse
/function=tan
/function=Tanh
/function=Trim
/function=Truncate
/function=UCase
/function=upper
/function=Val
/name=Start
/Author = SEH
/version = 1
/filename = StartMain.symbol
/stroke = ABCDEFGHIJKLMNOP
/programtext = Goto [GotoNextLine1.Pathname]
/syntax = GoTo, {[(number)]}
/notes = none
/opcode = nop
/point = -50, 250, output, Int32, GotoNextLine1
/line = -250,250,250,250,Cyan
/line = -250,-250,-250,250,Crimson
/line = 250,-250,-250,-250,Cornsilk
/line = 250,250,250,-250,CornflowerBlue
/line = -250,250,250,-250,Coral
/line = 250,250,-250,-250,GotoNextLine1
/name=If
/Author = SEH
/version = 1
/filename = IfInteger.symbol
/stroke = ABCDEFGHIJKLMNOP
/programtext = if a < b then goto c elseif a > b then goto c else goto e:
/syntax = [ComeFrom.pathname], if, [a.pathname], <, [b.pathname], then, goto, [c.pathname], elseif, [a.pathname], >, [b.pathname], then, goto, [d.pathname], else, goto, [e.pathname]
/notes = ComeFrom IF a > b THEN GOTO c ELSEIF a < b THEN GOTO d ELSE GOTO e
/opcode = nop
/point = -50, 250, output, Int32, e
/point = -50, 250, output, Int32, d
/point = -50, 250, output, Int32, c
/point = 150, 150, input, erase, b
/point = -150, 150, input, erase, a
/point = 0, -250, input, erase, ComeFrom
/line = 0,250,250,0,Red
/line = 250,0,0,-250,Green
/line = 0,-250,-250,0,Yellow
/line = -250,0,0,250,e
/name=End
/Author = SEH
/version = 1
/filename = End1.symbol
/stroke = ABCDEFGHIJKLMNOP
/programtext = return a:
/syntax = [ComeFrom.pathname], return , [a.pathname]
/notes = ComeFrom RETURN a
/opcode = nop
/point = -250, 0, input, erase, a
/point = 0, 100, input, erase, ComeFrom
/line = -250,100,250,100,Red
/line = 250,100,250,-100,Green
/line = 250,-100,-250,-100,Yellow
/line = -250,-100,-250,100,a
/error = /error,Origin,0,0,0,0,
/endoffile
